{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","index.js","lib/advanced_spoof.js","lib/character_sheet_panel.js","lib/login_panel.js","lib/panel.js","lib/prompt_panel.js"],"names":[],"mappingslMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClzvLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"client.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\r\n\r\nconst LoginPanel = require('./lib/login_panel.js');\r\nconst PromptPanel = require('./lib/prompt_panel.js');\r\nconst CharacterSheetPanel = require('./lib/character_sheet_panel.js');\r\nconst AdvancedSpoofPanel = require('./lib/advanced_spoof.js');\r\n\r\nclass Client {\r\n\tconstructor() {\r\n\t\tlet wsurl = \"ws\" + window.location.href.substring(4); // replaces the \"http\" with \"ws\" (and also does \"https\" -> \"wss\" as well)\r\n\t\tthis.socket = new WebSocket(wsurl); // open a connection\r\n\t\tthis.socket.addEventListener('message', this.handle_message.bind(this));\r\n\r\n\t\tthis.chat_window = document.getElementById(\"chatwindow\");\r\n\t\tdocument.getElementById(\"main-text-input\").addEventListener(\"keydown\", this.text_input_keydown.bind(this));\r\n\t\tdocument.body.addEventListener(\"click\", this.handle_click.bind(this));\r\n\t\tdocument.body.addEventListener(\"change\", this.handle_change.bind(this));\r\n\t\tthis.player_names = {\"-1\": \"GM\"};\r\n\r\n\t\tthis.character_sheet = {};\r\n\t\tthis.character_sheets = {}; // GM only - the one above is the player's char sheet and this one and the one below are the GM's char sheets.\r\n\t\tthis.char_sheet_panels = {};\r\n\t}\r\n\r\n\thandle_message(e) {\r\n\t\tlet obj = JSON.parse(e.data);\r\n\t\tconsole.log(obj);\r\n\t\tif(obj.show_login_panel) {\r\n\t\t\tnew LoginPanel(this);\r\n\t\t}\r\n\t\tif(obj.be_gm) {\r\n\t\t\tdocument.body.classList.add(\"is-gm\"); // basically you can stick various classes on elements to make them only visible if youre a gm.\r\n\t\t}\r\n\t\tif(obj.frozen != null) { // only gm gets this.\r\n\t\t\tdocument.getElementById(\"frozen-checkbox\").checked = obj.frozen;\r\n\t\t}\r\n\t\tif(obj.add_player) {\r\n\t\t\tlet po = obj.add_player;\r\n\t\t\tthis.player_names[po.id] = po.name;\r\n\t\t\tlet elem = document.createElement(\"div\");\r\n\t\t\telem.classList.add(\"player-entry\");\r\n\t\t\telem.dataset.playernum = po.id;\r\n\t\t\telem.innerHTML = `\r\n<div style='text-align:center;${po.name_style}' class='player-name ${po.name_class}'></div>\r\n<div class='gm-only' style='font-size:12px;font-style:italic;text-align:center'>Player</div>\r\n<div>\r\n\t<input type='button' class='pm-button' value='PM'>\r\n\t<input type='button' class='edit-char-button gm-only' value='Edit Character Sheet'>\r\n\t<input type='button' class='spoof-button gm-only' value='Spoof'>\r\n\t<label class='gm-only'><input type='checkbox' class='mute-checkbox'>Mute</label>\r\n</div>\r\n`;\r\n\t\t\telem.querySelector('.player-name').textContent = po.name;\r\n\t\t\tdocument.getElementById(\"playerslist\").appendChild(elem);\r\n\t\t}\r\n\t\tif(obj.add_npc) {\r\n\t\t\tlet po = obj.add_npc;\r\n\t\t\tthis.player_names[po.id] = po.name;\r\n\t\t\tlet elem = document.createElement(\"div\");\r\n\t\t\telem.classList.add(\"player-entry\");\r\n\t\t\telem.dataset.playernum = po.id;\r\n\t\t\telem.innerHTML = `\r\n<div style='text-align:center;${po.name_style}' class='player-name ${po.name_class}'></div>\r\n<div style='font-size:12px;font-style:italic;text-align:center'>NPC</div>\r\n<div>\r\n\t<input type='button' class='spoof-button gm-only' value='Spoof'>\r\n</div>\r\n`;\r\n\t\t\telem.querySelector('.player-name').textContent = po.name;\r\n\t\t\tdocument.getElementById(\"npcslist\").appendChild(elem);\r\n\t\t}\r\n\t\tif(obj.to_chat) {\r\n\t\t\tlet items = obj.to_chat;\r\n\t\t\tif(!(items instanceof Array))\r\n\t\t\t\titems = [items];\r\n\t\t\tthis.modify_chat(() => {\r\n\t\t\t\tfor(let item of items) {\r\n\t\t\t\t\t// wrap them in divs and toss them at the end of the chat window`\r\n\t\t\t\t\tlet newdiv = document.createElement('div');\r\n\t\t\t\t\tnewdiv.innerHTML = item;\r\n\t\t\t\t\tthis.chat_window.appendChild(newdiv);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(obj.playernum) {\r\n\t\t\t// sets our playernum so we can retrieve our name\r\n\t\t\tthis.playernum = obj.playernum;\r\n\t\t}\r\n\t\tif(obj.character_sheet) {\r\n\t\t\tthis.character_sheet = obj.character_sheet;\r\n\t\t\tif(this.character_sheet_panel)\r\n\t\t\t\tthis.character_sheet_panel.update_data(this.character_sheet);\r\n\t\t}\r\n\t\tif(obj.character_sheets) {\r\n\t\t\tObject.assign(this.character_sheets, obj.character_sheets);\r\n\t\t\t// no need to update anything, there's no panels open since this is only sent on login\r\n\t\t\t// and only the GM can change the character sheets.\r\n\t\t}\r\n\t}\r\n\r\n\thandle_click(e) {\r\n\t\tlet input = e.target.closest(\"input\");\r\n\t\tlet playernum_elem = e.target.closest(\"[data-playernum]\");\r\n\t\tlet playernum = playernum_elem ? playernum_elem.dataset.playernum : null;\r\n\t\tif(input) {\r\n\t\t\tif(input.dataset.dice) {\r\n\t\t\t\tlet maxval = +input.dataset.dice;\r\n\t\t\t\tdocument.getElementById(\"dice-output\").value = Math.floor(Math.random()*maxval) + 1;\r\n\t\t\t}\r\n\t\t\tif(input.classList.contains(\"pm-button\") && playernum) {\r\n\t\t\t\tnew PromptPanel(`PM to ${this.player_names[playernum]}`).value_promise().then((val) => {\r\n\t\t\t\t\tif(!val)\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tthis.socket.send(JSON.stringify({pm: {to: playernum, text: val}}));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif(input.classList.contains(\"spoof-button\") && playernum) {\r\n\t\t\t\tnew PromptPanel(`Spoofing ${this.player_names[playernum]}`).value_promise().then((val) => {\r\n\t\t\t\t\tif(!val)\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tthis.socket.send(JSON.stringify({spoof: {victim: playernum, text: val}}));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (input.classList.contains(\"advanced-spoof-button\")) {\r\n\t\t\t\tnew AdvancedSpoofPanel(this);\r\n\t\t\t}\r\n\t\t\tif(input.classList.contains(\"char-sheet-button\") && !this.char_sheet_panel) {\r\n\t\t\t\tthis.char_sheet_panel = new CharacterSheetPanel(this, false);\r\n\t\t\t\tthis.char_sheet_panel.update_data(this.character_sheet);\r\n\t\t\t\tthis.char_sheet_panel.update_name(this.player_names[this.playernum]);\r\n\t\t\t\tthis.char_sheet_panel.wait_until_close().then(() => {\r\n\t\t\t\t\tthis.char_sheet_panel = null;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif(input.classList.contains(\"edit-char-button\") && playernum && !this.char_sheet_panels[playernum]) {\r\n\t\t\t\tthis.char_sheet_panels[playernum] = new CharacterSheetPanel(this, true, playernum);\r\n\t\t\t\tthis.char_sheet_panels[playernum].update_data(this.character_sheets[playernum]);\r\n\t\t\t\tthis.char_sheet_panels[playernum].update_name(this.player_names[playernum]);\r\n\t\t\t\tthis.char_sheet_panels[playernum].wait_until_close().then(() => {\r\n\t\t\t\t\tthis.char_sheet_panels[playernum] = null;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet pm_link = e.target.closest(\"[data-pm]\");\r\n\t\tif(pm_link) {\r\n\t\t\tnew PromptPanel(`PM reply`).value_promise().then((val) => {\r\n\t\t\t\tif(!val)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tthis.socket.send(JSON.stringify({pm: {to: pm_link.dataset.pm, text: val}}));\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\thandle_change(e) {\r\n\t\tlet input = e.target.closest(\"input\");\r\n\t\tlet playernum_elem = e.target.closest(\"[data-playernum]\");\r\n\t\tlet playernum = playernum_elem ? playernum_elem.dataset.playernum : null;\r\n\t\tif(input) {\r\n\t\t\tif(input.id == \"frozen-checkbox\") {\r\n\t\t\t\tthis.socket.send(JSON.stringify({frozen: !!input.checked}));\r\n\t\t\t}\r\n\t\t\tif(input.classList.contains(\"mute-checkbox\") && playernum) {\r\n\t\t\t\tif(input.checked)\r\n\t\t\t\t\tthis.socket.send(JSON.stringify({mute_player: playernum}));\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.socket.send(JSON.stringify({unmute_player: playernum}));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttext_input_keydown(e) {\r\n\t\tlet text_input = document.getElementById(\"main-text-input\");\r\n\t\tif(e.which == 13) { // enter\r\n\t\t\tlet text = text_input.value;\r\n\t\t\ttext_input.value = \"\";\r\n\t\t\tthis.socket.send(JSON.stringify({chat: text}));\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tmodify_chat(callback) { // wrap your chat modifications with this function so that the scroll gets updated properly\r\n\t\tlet do_scroll = false;\r\n\t\tif(Math.ceil(this.chat_window.scrollTop + this.chat_window.clientHeight) >= Math.floor(this.chat_window.scrollHeight)) // check if the thing is scrolled all the way down\r\n\t\t\tdo_scroll = true; // makes it keep itself scrolled down\r\n\t\tcallback(); // now the chat window gets modified\r\n\t\t// and now we scroll all the way down if it was that way before\r\n\t\tif(do_scroll)\r\n\t\t\tthis.chat_window.scrollTop = this.chat_window.scrollHeight - this.chat_window.clientHeight;\r\n\t}\r\n}\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n\t// alrighty let's connect\r\n\twindow.client = new Client();\r\n});\r\n","'use strict';\r\nconst Panel = require('./panel.js');\r\n\r\nclass AdvancedSpoofPanel extends Panel {\r\n\tconstructor(client) {\r\n\t\tsuper({width: 400, height: 140, title: \"Advanced Spoofing\"});\r\n\t\tthis.client = client;\r\n\t\tthis.content_obj.innerHTML = `\r\n<div><select class='spoof_from'></select> -> <select class='spoof_to'><option value='' selected>ALL</option></select></div>\r\n<input style='width:90%' type='text' class='prompt-value'></input>\r\n<input type='button' class='confirm-button' value='Send'>\r\n`;\r\n\t\tfor(let playernum of Object.keys(client.player_names)) {\r\n\t\t\tif(playernum == \"-1\")\r\n\t\t\t\tcontinue;\r\n\t\t\tlet player_name = client.player_names[playernum];\r\n\t\t\tlet elema = document.createElement(\"option\");\r\n\t\t\telema.value = playernum;\r\n\t\t\telema.textContent = player_name;\r\n\t\t\tlet elemb = document.createElement(\"option\");\r\n\t\t\telemb.value = playernum;\r\n\t\t\telemb.textContent = player_name;\r\n\t\t\tthis.$('.spoof_from').appendChild(elema);\r\n\t\t\tthis.$('.spoof_to').appendChild(elemb);\r\n\t\t}\r\n\t\tthis.return_val = null;\r\n\t\tthis.$('.confirm-button').addEventListener(\"click\", () => {\r\n\t\t\tthis.send();\r\n\t\t});\r\n\t\tthis.$('.prompt-value').addEventListener(\"keydown\", (e) => {\r\n\t\t\tif(e.which == 13) { // enter\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.send();\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.$('.prompt-value').focus();\r\n\t}\r\n\r\n\tsend() {\r\n\t\tlet text = this.$('.prompt-value').value;\r\n\t\tlet from = this.$('.spoof_from').value;\r\n\t\tlet to = this.$('.spoof_to').value;\r\n\t\tfrom = from == \"\" ? null : +from;\r\n\t\tto = to == \"\" ? null : +to;\r\n\t\tthis.client.socket.send(JSON.stringify({spoof: {victim: from, pm_to: to, text: text}}));\r\n\t\tthis.$('.prompt-value').value = \"\";\r\n\t}\r\n}\r\n\r\nmodule.exports = AdvancedSpoofPanel;\r\n","'use strict';\r\nconst Panel = require('./panel.js');\r\n\r\nclass CharacterSheetPanel extends Panel {\r\n\tconstructor(client, edit_mode = true, playernum) {\r\n\t\tsuper({width: 540, height: 600, title:\"Character Sheet\"});\r\n\t\tthis.client = client;\r\n\t\tthis.playernum = playernum;\r\n\t\tthis.content_obj.innerHTML =`\r\n<div><input type='button' class='save-button' value = \"Save and Send Sheet\"></div>\r\n<h1 class=\"charname\">Gen-R-ICC-1</h1>\r\n<div class='left-part'>\r\n\t<div class='margins'><b>Service Group: </b><span data-csfield=\"service_group\"></span></div>\r\n\t<div class='margins'><b>Firm: </b><span data-csfield=\"firm\"></span></div>\r\n\t<div class='margins'><b>Gender: </b><span data-csfield=\"gender\"></span></div>\r\n\t<div class='margins'><b>Tics: </b><span data-csfield=\"tics\" class='fullwidth'></span></div>\r\n\t<table class='margins'>\r\n\t\t<tr>\r\n\t\t\t<td><b>MBD: </b></td>\r\n\t\t\t<td><label><input type='checkbox' data-csfield=\"mbd1\">Team Leader</label></td>\r\n\t\t\t<td><label><input type='checkbox' data-csfield=\"mbd3\">Loyalty Officer</label></td>\r\n\t\t\t<td><label><input type='checkbox' data-csfield=\"mbd5\">Hygiene Officer</label></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td></td>\r\n\t\t\t<td><label><input type='checkbox' data-csfield=\"mbd2\">C&RO</label></td>\r\n\t\t\t<td><label><input type='checkbox' data-csfield=\"mbd4\">Equipment Guy</label></td>\r\n\t\t\t<td><label><input type='checkbox' data-csfield=\"mbd6\">Happiness Officer</label></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td></td>\r\n\t\t\t<td colspan=3><input type='checkbox' data-csfield=\"mbd_custom\"><span data-csfield=\"mbd_custom_name\"></span></td>\r\n\t\t</tr>\r\n\t</table>\r\n</div>\r\n`;\r\n\t\tfor(let elem of this.$$('[data-csfield]')) {\r\n\t\t\tif(elem.tagName == \"INPUT\") {\r\n\t\t\t\tif(elem.type == \"checkbox\") {\r\n\t\t\t\t\tif(!edit_mode)\r\n\t\t\t\t\t\telem.addEventListener(\"click\", (e)=>{e.preventDefault(); return false;}); // prevent click events. The checkbox is nearly unreadable if it's grey, so doing this instead\r\n\t\t\t\t} else {\r\n\t\t\t\t\telem.readonly = !edit_mode;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\telem.contentEditable = edit_mode;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(edit_mode) {\r\n\t\t\tthis.$('.save-button').addEventListener(\"click\", () => {\r\n\t\t\t\tlet data = this.get_data();\r\n\t\t\t\tclient.socket.send(JSON.stringify({update_character_sheet: {for: this.playernum, data}}));\r\n\t\t\t\tthis.client.character_sheets[this.playernum] = data;\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.$('.save-button').style.display = \"none\"; // ree get rid of that button\r\n\t\t}\r\n\t}\r\n\r\n\tupdate_name(name) {\r\n\t\tthis.$('.charname').textContent = name;\r\n\t}\r\n\tupdate_data(data) {\r\n\t\tif(!data)\r\n\t\t\treturn; // ooh it's blank.\r\n\t\tfor(let elem of this.$$('[data-csfield]')) {\r\n\t\t\tlet key = elem.dataset.csfield;\r\n\t\t\tif(elem.tagName == \"INPUT\") {\r\n\t\t\t\tif(elem.type == \"checkbox\") { //checkboxes use checked instead of value\r\n\t\t\t\t\telem.checked = data[key];\r\n\t\t\t\t} else {\r\n\t\t\t\t\telem.value = string_wrapper(data[key]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\telem.innerHTML = string_wrapper(data[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tget_data() { // literally the same as update_data but the assignments are swapped.\r\n\t\tlet data = {};\r\n\t\tfor(let elem of this.$$('[data-csfield]')) {\r\n\t\t\tlet key = elem.dataset.csfield;\r\n\t\t\tif(elem.tagName == \"INPUT\") {\r\n\t\t\t\tif(elem.type == \"checkbox\") {\r\n\t\t\t\t\tdata[key] = elem.checked;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdata[key] = elem.value;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdata[key] = elem.innerHTML;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n}\r\n\r\nfunction string_wrapper(obj) { // prevents things like \"undefined\" and \"null\" showing up.\r\n\tif(obj == null)\r\n\t\treturn \"\";\r\n\telse\r\n\t\treturn \"\"+obj;\r\n}\r\n\r\nmodule.exports = CharacterSheetPanel;\r\n","'use strict';\r\nconst Panel = require('./panel.js');\r\n\r\nclass LoginPanel extends Panel {\r\n\tconstructor(client) {\r\n\t\tsuper({width: 240, height: 288, title: \"Login\", can_close: false});\r\n\t\tthis.client = client;\r\n\t\tthis.content_obj.innerHTML = `\r\n<form>\r\n<div style='display:inline-block;text-align:left'>\r\n\t<div class='available_players'></div>\r\n\t<label><input type='radio' class='observe-checkbox' name='login-type' value='observe' checked>Observe</label>\r\n</div><br></form>\r\n<input type='password' class='password-field' placeholder=\"Password (default is 'asdf')\" disabled><br>\r\n<div style='color:red' class='login-fail-reason'></div>\r\n<input type='button' class='login-button' value='Login'></input>\r\n`;\r\n\t\tthis.$('.login-button').addEventListener(\"click\", () => {\r\n\t\t\tlet selected_elem = this.$('input:checked');\r\n\t\t\tconsole.log(selected_elem);\r\n\t\t\tif(selected_elem.dataset.playernum) {\r\n\t\t\t\tlet sel_player = +selected_elem.dataset.playernum;\r\n\t\t\t\tlet password = this.$('.password-field').value;\r\n\t\t\t\tconsole.log(\"GO!\");\r\n\t\t\t\tthis.client.socket.send(JSON.stringify({password, sel_player, login: true}));\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.content_obj.addEventListener(\"change\", (e) => { // handle observed changes\r\n\t\t\tconsole.log(e);\r\n\t\t\tthis.$('.password-field').disabled = this.$('.observe-checkbox').checked;\r\n\t\t});\r\n\t\tthis.handle_message = this.handle_message.bind(this);\r\n\t\tthis.client.socket.addEventListener(\"message\", this.handle_message);\r\n\t}\r\n\r\n\thandle_message(e) {\r\n\t\tlet obj = JSON.parse(e.data);\r\n\t\tif(obj.avail_players) {\r\n\t\t\tlet curr_playernum = this.$(`.available_players input[checked]`);\r\n\t\t\tcurr_playernum = curr_playernum && +curr_playernum.dataset.playernum; // get the currently selected player if theres a checked element\r\n\t\t\tthis.$(`.available_players`).innerHTML = \"\"; // clear it.\r\n\t\t\tfor(let [key, val] of Object.entries(obj.avail_players)) {\r\n\t\t\t\tlet label = document.createElement(\"label\");\r\n\t\t\t\tlabel.textContent = val;\r\n\t\t\t\tlabel.style.display = \"block\"; // so that they each are on different lines\r\n\t\t\t\tlet radiobutton = document.createElement(\"input\");\r\n\t\t\t\tradiobutton.type = \"radio\";\r\n\t\t\t\tradiobutton.dataset.playernum = key;\r\n\t\t\t\tradiobutton.name = \"login-type\";\r\n\t\t\t\tlabel.prepend(radiobutton); // add it before the text\r\n\t\t\t\tthis.$(`.available_players`).appendChild(label);\r\n\t\t\t\tif(+key == curr_playernum) {\r\n\t\t\t\t\tradiobutton.checked = true;\r\n\t\t\t\t\tcurr_playernum = null; // mark that we've resolved this and don't need to check the observe.\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(curr_playernum) { // there was a player checked, but it's gone now, so go back to observe\r\n\t\t\t\tthis.$(`.observe-checkbox`).checked = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(obj.login_fail) {\r\n\t\t\tthis.$('.login-fail-reason').textContent = obj.login_fail;\r\n\t\t}\r\n\t\tif(obj.login_success) {\r\n\t\t\tthis.close();\r\n\t\t}\r\n\t}\r\n\r\n\tclose() {\r\n\t\tthis.client.socket.removeEventListener(\"message\", this.handle_message);\r\n\t\tsuper.close(...arguments);\r\n\t}\r\n}\r\n\r\nmodule.exports = LoginPanel;\r\n","'use strict';\r\n\r\nclass Panel {\r\n\tconstructor({width=400, height=400, title=\"\", can_close = true} = {}) {\r\n\t\tvar left = document.documentElement.clientWidth / 2 - width / 2;\r\n\t\tvar top = document.documentElement.clientHeight / 2 - height / 2;\r\n\t\tthis.container_obj = document.createElement('div');\r\n\t\tObject.assign(this.container_obj.style, {width:width+\"px\", height:height+\"px\", left:left+\"px\", top:top+\"px\"});\r\n\t\tthis.container_obj.classList.add('uiframe-container');\r\n\t\tthis.panel_obj = document.createElement('div');\r\n\t\tthis.panel_obj.classList.add('uiframe');\r\n\t\tthis.panel_obj.tabIndex = -1;\r\n\t\tthis.header_obj = document.createElement('div');\r\n\t\tthis.header_obj.classList.add('uiframe-header');\r\n\t\tthis.title_node = document.createTextNode(title);\r\n\t\tthis.header_obj.appendChild(this.title_node);\r\n\t\tthis.content_obj = document.createElement('div');\r\n\t\tthis.content_obj.classList.add('uiframe-content');\r\n\t\tthis.panel_obj.appendChild(this.header_obj);\r\n\t\tthis.panel_obj.appendChild(this.content_obj);\r\n\t\tthis.container_obj.appendChild(this.panel_obj);\r\n\t\tdocument.getElementById('uiframes-container').appendChild(this.container_obj);\r\n\r\n\t\tthis.header_obj.addEventListener(\"mousedown\", this._start_drag.bind(this));\r\n\t\tthis.container_obj.addEventListener(\"mousedown\", this._start_resize.bind(this));\r\n\t\tthis.container_obj.addEventListener(\"mousemove\", this._container_mousemove.bind(this));\r\n\t\tthis.container_obj.addEventListener(\"mouseout\", this._container_mouseout.bind(this));\r\n\r\n\t\tthis.can_close = can_close;\r\n\r\n\t\tif(can_close) {\r\n\t\t\tthis.close_button = document.createElement('div');\r\n\t\t\tthis.close_button.classList.add('uiframe-close-button');\r\n\t\t\tthis.header_obj.appendChild(this.close_button);\r\n\r\n\t\t\tthis.close_button.addEventListener(\"click\", () => {\r\n\t\t\t\tthis.close();\r\n\t\t\t});\r\n\t\t\tthis.close_button.addEventListener(\"mousedown\", (e) => {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t_start_drag(e) {\r\n\t\tif(e.defaultPrevented)\r\n\t\t\treturn;\r\n\t\tif(e.target != this.header_obj) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar pad = (this.container_obj.offsetWidth - this.panel_obj.offsetWidth)/2;\r\n\t\te.preventDefault();\r\n\t\tthis.panel_obj.focus();\r\n\t\tvar lastclientx = e.clientX;\r\n\t\tvar lastclienty = e.clientY;\r\n\t\tvar mousemove = (e) => {\r\n\t\t\tvar dx = e.clientX - lastclientx;\r\n\t\t\tvar dy = e.clientY - lastclienty;\r\n\t\t\tlastclientx = e.clientX;\r\n\t\t\tlastclienty = e.clientY;\r\n\t\t\tvar {left:oldleft, top:oldtop} = this.container_obj.getBoundingClientRect();\r\n\t\t\tthis.container_obj.style.left = Math.min(document.documentElement.clientWidth-160-pad, Math.max(-pad,oldleft + dx)) + \"px\";\r\n\t\t\tthis.container_obj.style.top = Math.min(document.documentElement.clientHeight-35-pad, Math.max(-pad,oldtop + dy)) + \"px\";\r\n\t\t};\r\n\t\tvar mouseup = () => {\r\n\t\t\tdocument.removeEventListener(\"mousemove\", mousemove);\r\n\t\t\tdocument.removeEventListener(\"mouseup\", mouseup);\r\n\t\t};\r\n\t\tdocument.addEventListener(\"mousemove\", mousemove);\r\n\t\tdocument.addEventListener(\"mouseup\", mouseup);\r\n\t}\r\n\r\n\t_resize_meta(e) { // figure out which edge the mouse cursor is on and return an object with the appropriate flags\r\n\t\tvar pad = (this.container_obj.offsetWidth - this.panel_obj.offsetWidth)/2;\r\n\t\tvar width = this.panel_obj.offsetWidth;\r\n\t\tvar height = this.panel_obj.offsetHeight;\r\n\t\tvar out = {drag_right: false, drag_left: false, drag_up: false, drag_down: false, cursor: \"default\"};\r\n\t\tif(e.target == this.container_obj) {\r\n\t\t\tif(e.offsetX < pad)\r\n\t\t\t\tout.drag_left = true;\r\n\t\t\tif(e.offsetY < pad)\r\n\t\t\t\tout.drag_up = true;\r\n\t\t\tif(e.offsetX > (width + pad))\r\n\t\t\t\tout.drag_right = true;\r\n\t\t\tif(e.offsetY > (height + pad))\r\n\t\t\t\tout.drag_down = true;\r\n\t\t\tif((out.drag_left && out.drag_down) || (out.drag_up && out.drag_right)) {\r\n\t\t\t\tout.cursor = \"nesw-resize\";\r\n\t\t\t} else if((out.drag_left && out.drag_up) || (out.drag_down && out.drag_right)) {\r\n\t\t\t\tout.cursor = \"nwse-resize\";\r\n\t\t\t} else if(out.drag_left || out.drag_right) {\r\n\t\t\t\tout.cursor = \"ew-resize\";\r\n\t\t\t} else if(out.drag_up || out.drag_down) {\r\n\t\t\t\tout.cursor = \"ns-resize\";\r\n\t\t\t}\r\n\t\t}\r\n\t\tout.can_resize = out.drag_right || out.drag_left || out.drag_up || out.drag_down;\r\n\t\treturn out;\r\n\t}\r\n\r\n\t_start_resize(e) {\r\n\t\t// bring the panel to the front\r\n\t\tif(this.container_obj != document.getElementById('uiframes-container').lastChild)\r\n\t\t\tdocument.getElementById('uiframes-container').appendChild(this.container_obj);\r\n\r\n\t\t// figure out which edges we're resizing\r\n\t\tvar resize_meta = this._resize_meta(e);\r\n\t\tif(!resize_meta.can_resize) // oof we're not resizing\r\n\t\t\treturn;\r\n\t\t// figure out how much space is around the edges\r\n\t\tvar pad = (this.container_obj.offsetWidth - this.panel_obj.offsetWidth)/2;\r\n\t\te.preventDefault();\r\n\t\tthis.panel_obj.focus();\r\n\t\tvar lastclientx = e.clientX;\r\n\t\tvar lastclienty = e.clientY;\r\n\t\t// now start dragging\r\n\t\tvar mousemove = (e) => {\r\n\t\t\tvar dx = e.clientX - lastclientx;\r\n\t\t\tvar dy = e.clientY - lastclienty;\r\n\t\t\tlastclientx = e.clientX;\r\n\t\t\tlastclienty = e.clientY; // figure out how much we moved\r\n\t\t\tvar {left:oldleft, top:oldtop} = this.container_obj.getBoundingClientRect();\r\n\t\t\tif(resize_meta.drag_left) { // and now resize ourselves\r\n\t\t\t\tthis.container_obj.style.left = Math.min(document.documentElement.clientWidth-160-pad,Math.max(-pad,oldleft + dx)) + \"px\";\r\n\t\t\t\tthis.container_obj.style.width = Math.max(160,this.panel_obj.clientWidth - dx) + \"px\";\r\n\t\t\t} else if(resize_meta.drag_right) {\r\n\t\t\t\tthis.container_obj.style.width = Math.max(160,this.panel_obj.clientWidth + dx) + \"px\";\r\n\t\t\t}\r\n\t\t\tif(resize_meta.drag_up) {\r\n\t\t\t\tthis.container_obj.style.top = Math.min(document.documentElement.clientHeight-35-pad,Math.max(-pad,oldtop + dy)) + \"px\";\r\n\t\t\t\tthis.container_obj.style.height = Math.max(35,this.panel_obj.clientHeight - dy) + \"px\";\r\n\t\t\t} else if(resize_meta.drag_down) {\r\n\t\t\t\tthis.container_obj.style.height = Math.max(35,this.panel_obj.clientHeight + dy) + \"px\";\r\n\t\t\t}\r\n\t\t};\r\n\t\tvar mouseup = () => {\r\n\t\t\tdocument.removeEventListener(\"mousemove\", mousemove);\r\n\t\t\tdocument.removeEventListener(\"mouseup\", mouseup);\r\n\t\t};\r\n\t\tdocument.addEventListener(\"mousemove\", mousemove);\r\n\t\tdocument.addEventListener(\"mouseup\", mouseup);\r\n\t}\r\n\r\n\t_container_mousemove(e) {\r\n\t\tvar resize_meta = this._resize_meta(e);\r\n\t\tthis.container_obj.style.cursor = resize_meta.cursor;\r\n\t}\r\n\t_container_mouseout() {\r\n\t\tthis.container_obj.style.cursor = \"default\";\r\n\t}\r\n\r\n\tget title() {\r\n\t\treturn this.title_node.textContent;\r\n\t}\r\n\r\n\tset title(val) {\r\n\t\tthis.title_node.textContent = val;\r\n\t}\r\n\r\n\tclose() {\r\n\t\tdocument.getElementById('uiframes-container').removeChild(this.container_obj); // remove ourselves!\r\n\t\tif(this.close_promise_resolve)\r\n\t\t\tthis.close_promise_resolve();\r\n\t}\r\n\r\n\twait_until_close() {\r\n\t\tif(this.close_promise)\r\n\t\t\treturn this.close_promise;\r\n\t\treturn this.close_promise = new Promise(resolve => {\r\n\t\t\tthis.close_promise_resolve = resolve;\r\n\t\t});\r\n\t}\r\n\r\n\t// convenience functions\r\n\t$(sel) {\r\n\t\treturn this.content_obj.querySelector(sel);\r\n\t}\r\n\t$$(sel) {\r\n\t\treturn this.content_obj.querySelectorAll(sel);\r\n\t}\r\n}\r\n\r\nmodule.exports = Panel;\r\n","'use strict';\r\nconst Panel = require('./panel.js');\r\n\r\nclass PromptPanel extends Panel {\r\n\tconstructor(title) {\r\n\t\tsuper({width: 400, height: 100, title});\r\n\t\tthis.content_obj.innerHTML = `\r\n<input style='width:90%' type='text' class='prompt-value'></input>\r\n<input type='button' class='confirm-button' value='OK'>\r\n`;\r\n\t\tthis.return_val = null;\r\n\t\tthis.$('.confirm-button').addEventListener(\"click\", () => {\r\n\t\t\tthis.return_val = this.$('.prompt-value').value;\r\n\t\t\tthis.close();\r\n\t\t});\r\n\t\tthis.$('.prompt-value').addEventListener(\"keydown\", (e) => {\r\n\t\t\tif(e.which == 13) { // enter\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.return_val = this.$('.prompt-value').value;\r\n\t\t\t\tthis.close();\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.$('.prompt-value').focus();\r\n\t}\r\n\r\n\tasync value_promise() {\r\n\t\tawait this.wait_until_close();\r\n\t\treturn this.return_val;\r\n\t}\r\n}\r\n\r\nmodule.exports = PromptPanel;\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}